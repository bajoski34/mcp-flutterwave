/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/plans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve all subscription plans
         * @description Fetch a list of all subscription plans.
         */
        get: operations["getPlans"];
        put?: never;
        /**
         * Create a new subscription plan
         * @description Create a new subscription plan with specified details.
         */
        post: operations["createPlan"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getPlans: {
        parameters: {
            query?: {
                /** @description Page number for pagination */
                page?: number;
                /** @description This is the exact amount set when creating the payment plan */
                amount?: number;
                /** @description This is the currency used for the payment plan */
                currency?: string;
                /** @description This is the status of the payment plan */
                status?: string;
                /** @description This is the interval of the payment plan */
                interval?: string;
                /** @description This is the start date for the payment plan */
                from?: string;
                /** @description This is the end date for the payment plan */
                to?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A list of subscription plans */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example Payment plans fetched */
                        message?: string;
                        meta?: {
                            page_info?: {
                                /** @example 10 */
                                current_page?: number;
                                /** @example 1 */
                                total_pages?: number;
                            };
                        };
                        data?: {
                            /** @example pln_123456789 */
                            id?: string;
                            /** @example Premium Plan */
                            name?: string;
                            /** @example 5000 */
                            amount?: number;
                            /** @example monthly */
                            interval?: string;
                            /** @example 12 */
                            duration?: number;
                            /** @example NGN */
                            currency?: string;
                            /** @example active */
                            status?: string;
                            /**
                             * Format: date-time
                             * @example 2023-01-01T00:00:00Z
                             */
                            created_at?: string;
                        }[];
                    };
                };
            };
        };
    };
    createPlan: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Plan data for the new subscription plan */
        requestBody?: {
            content: {
                "application/json": {
                    /** @example Premium Plan */
                    name: string;
                    /** @example 5000 */
                    amount: number;
                    /** @example monthly */
                    interval: string;
                    /** @example 12 */
                    duration: number;
                    /** @example NGN */
                    currency?: string;
                };
            };
        };
        responses: {
            /** @description Subscription plan created successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example Payment plan created */
                        message?: string;
                        data?: {
                            /** @example pln_123456789 */
                            id?: string;
                            /** @example Premium Plan */
                            name?: string;
                            /** @example 5000 */
                            amount?: number;
                            /** @example monthly */
                            interval?: string;
                            /** @example 12 */
                            duration?: number;
                            /** @example NGN */
                            currency?: string;
                            /** @example active */
                            status?: string;
                            /** @example pln_tok_abcdef123456 */
                            plan_token?: string;
                            /**
                             * Format: date-time
                             * @example 2023-01-01T00:00:00Z
                             */
                            created_at?: string;
                        };
                    };
                };
            };
        };
    };
}
